environment:
  global:
    # This will be used as part of the zipfile name
    PROJECT_NAME: rust-bisect
    RUST_VERSION: nightly
  matrix:
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

# Install Rust and Cargo
# (Shamelessly stolen from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - ps: |
      Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:RUST_VERSION}-${env:TARGET}.exe" -FileName "rust-nightly.exe"
      .\rust-nightly.exe /VERYSILENT /NORESTART /DIR="C:\Rust"
      $env:PATH="$env:PATH;C:\rust\bin"
      # Set up openssl (adapted from multirust's appveyor setup)
      Start-FileDownload "http://www.npcglib.org/~stathis/downloads/openssl-1.0.2d-vs2015.7z" -FileName "openssl.7z"
      7z x openssl.7z -o"C:\OpenSSL"
      $env:OPENSSL_INCLUDE_DIR="C:\OpenSSL\openssl-1.0.2d-vs2015\include"
      if ($env:BITS -eq "32") {
        $env:OPENSSL_LIB_DIR="C:\OpenSSL\openssl-1.0.2d-vs2015\lib"
      } else {
        $env:OPENSSL_LIB_DIR="C:\OpenSSL\openssl-1.0.2d-vs2015\lib64"
      }
      $env:OPENSSL_LIBS="ssleay32MT:libeay32MT"
      # Tell rust-openssl that OpenSSL must be linked statically
      $env:OPENSSL_STATIC="1"
      rustc -vV
      cargo -vV

# ???
build: false

# Equivalent to Travis' `script` phase
test_script:
  - echo Cloning multirust
  - git clone --single-branch --branch new https://github.com/Diggsey/multirust-rs.git
  - cd multirust-rs
  - git checkout c350ddb447b6bd7e431c1a8af796bb5b345b8e8d
  - cd ..
  - echo Replacing Cargo.toml to override multirust path
  - copy ci/Cargo.toml.multirust-override Cargo.toml
  - cargo build --verbose
  - cargo run --example rust-issue-30123
  - cargo test
  - cargo build --release

# Equivalent to `before_deploy` phase
after_test:
  - mkdir staging
  - copy target\release\rust-bisect.exe staging
  - cd staging
    # release zipfile will look like 'rust-bisect-v1.2.3-x86_64-pc-windows-msvc'
  - 7z a ../%PROJECT_NAME%-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip *

# IMPORTANT All the artifacts need to be listed here, or they won't be uploaded to GitHub
artifacts:
  - path: $(PROJECT_NAME)-$(APPVEYOR_REPO_TAG_NAME)-$(TARGET).zip
    name: $(PROJECT_NAME)-$(APPVEYOR_REPO_TAG_NAME)-$(TARGET).zip
    type: zip

deploy:
  description: 'Windows release'
  # All the zipped artifacts will be deployed
  artifact: /.*\.zip/
  auth_token:
    secure: EiQh8vHxAwScvnRfDEFeVG1PWYu5/oMkhjvEmj4QDHP7dTvAsieRY18wVQ70XUdG
  provider: GitHub
  # deploy when a new tag is pushed
  on:
    appveyor_repo_tag: true

branches:
  only:
    - master
